[tool.poetry]
name = "shrump-pins-writer"
version = "0.1.0"
description = "The write API for pin data"
authors = ["Tucker Beck <tucker.beck@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "api"}]

[tool.poetry.dependencies]
python = "^3.12"
armasec = "^2.0.1"
asyncpg = "^0.29.0"
inflection = "^0.5.1"
loguru = "^0.7.2"
pendulum = "^3.0.0"
py-buzz = "^4.1.0"
pydantic = {extras = ["email"], version = "^2.9.2"}
python-dotenv = "^1.0.1"
snick = "^1.3.0"
sqlalchemy = {extras = ["mypy"], version = "^2.0.35"}
uvicorn = "^0.30.6"
auto-name-enum = "^2.0.0"
fastapi = "^0.111"
yarl = "^1.12.1"
pydantic-extra-types = "^2.9.0"
alembic = "^1.13.3"
pydantic-settings = "^2.5.2"

[tool.poetry.group.dev.dependencies]
ipython = "^8.28.0"
httpx = "^0.27.2"
py-docker-gadgets = "^0.1.3"
typer = "^0.12.5"
pgcli = "^4.1.0"
psycopg2 = "^2.9.9"
ruff = "^0.6.8"
# TODO: Upgrade to pytest 8 after Armasec has support for it
pytest = "^7"
pytest-cov = "^5.0.0"
pytest-env = "^1.1.3"
pytest-random-order = "^1.1.1"
pytest-asyncio = "^0.23"
pytest-mock = "^3.14.0"

[tool.poetry.scripts]
dev-tools = "dev_tools:app"

[tool.ruff]
line-length = 110
extend-exclude = ["alembic/*"]

[tool.ruff.lint]
extend-ignore = ["D200", "D106", "D402"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--random-order",
    "--cov=api",
    "--cov-report=term",
    "--cov-report=xml:tests/coverage.xml",
]
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.pytest_env]
DEPLOY_ENV = "TEST"             # Enforces that test database env vars will be used
ARMASEC_DOMAIN = "armasec.dev"  # Must align with the rs256_domain fixture in armasec's pytest extension
ARMASEC_DEBUG = false           # Set this to True to debug armasec issues by seeing verbose logging

[tool.coverage.run]
omit = [
    "api/main.py",
    "api/logging.py",
]
# Can this be removed safely?
# concurrency = ["greenlet", "thread"]

[tool.coverage.report]
fail_under = 90
show_missing = true

[tool.mypy]
plugins = ["pydantic.mypy", "sqlalchemy.ext.mypy.plugin"]
follow_imports = "silent"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "asyncpg.*",
    "sqlalchemy",
    "toml",
    "uvicorn",
]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
